{
  "openapi": "3.0.3",
  "info": {
    "title": "Unicon API Documentation",
    "version": "1.0.0",
    "description": "# üìò About Unicon üåü\n\nWelcome to Unicon, the ultimate solution for university students navigating the challenges of higher education. Born from the need to alleviate the burden of expensive textbooks and study materials, Unicon is more than just a web platform; it's a lifeline for students seeking affordability, community, and sustainability.\n\n### üå± Empowering Students, Building Community: \nUnicon is your virtual marketplace, meticulously crafted to simplify the process of buying, selling, and exchanging textbooks, stationery, and study essentials. It bridges the gap between students, fostering a sense of camaraderie where peers can help each other out while saving money.\n\n### üåç Championing Sustainability:\nBeyond transactions, Unicon is a beacon of sustainability on university campuses. By promoting the reuse of materials, it contributes to a greener, more eco-conscious future, empowering students to make a positive impact on the planet.\n\n### üöÄ Feature-Rich and User-Friendly:\nUnicon offers a seamless user experience with powerful features at your fingertips. Buy, sell, or exchange with ease, connect with peers in real-time through our intuitive chat feature, and personalize your profile to suit your needs.\n\n### üë©\u200düíª Learning Opportunities for Web Developers:\nUnicon isn't just for students; it can also help for web developers. With its optimized, less redundant and clean codebase built on the MERN stack and shadcn, Unicon offers a hands-on experience to master various concepts in web development.\n\n### üåü Join the Revolution:\nWhether you're a student seeking affordability or a web developer eager to sharpen your skills, Unicon is your gateway to a brighter, more connected future. Join us in revolutionizing the way students access study materials, one click at a time.\n\n### Getting Started:\n  Explore the comprehensive API documentation below to integrate seamlessly with Unicon. Whether you're a developer, partner, or enthusiast, this documentation provides the necessary information to interact with Unicon's API and unlock its full potential.\n"
  },
  "externalDocs": {
    "description": "View the live demo here",
    "url": "https://uniconweb.vercel.app"
  },
  "servers": [
    {
      "url": "http://localhost:8000/",
      "description": "Local server"
    },
    {
      "url": "https://unicon-api.vercel.app/",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "All User Endpoint"
    },
    {
      "name": "Product",
      "description": "All Endpoints to product"
    },
    {
      "name": "Shop",
      "description": "All Endpoints to shop"
    },
    {
      "name": "Conversation",
      "description": "All Endpoints to conversation"
    },
    {
      "name": "Message",
      "description": "All Endpoints to message"
    },
    {
      "name": "Order",
      "description": "All Endpoints to order"
    }
  ],
  "paths": {
    "/api/v2/user/create-user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "Uploads user profile image and sends an activation email.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "user1"
                  },
                  "email": {
                    "type": "string",
                    "format": "email,",
                    "example": "user1@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password,",
                    "example": "easymood"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "example": "https://res.cloudinary.com/zzcsddss/image/upload/v1684867973/profile/g8emueu79pg6yz3pyevj.png"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the user"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the user"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The password of the user"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "The profile avatar image file"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password",
                  "avatar"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully. Activation email sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "please check your email:- user1@gmail.com to activate your account!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v2/user/activation": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Activate user account",
        "description": "Activates a user account using an activation token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activation_token": {
                    "type": "string"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "activation_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "activation_token"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User account activated successfully."
          },
          "400": {
            "description": "Invalid activation token or user already exists."
          }
        }
      }
    },
    "/api/v2/user/login-user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Log in user",
        "description": "Log in an existing user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user1@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Abcde@12345"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user1@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Abcde@12345"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User logged in successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MTY2ZmMyOTBciMllMjM5MzI3MmI2MiIsImlhdCI6MTcxNDU4ODEzNywiZXhwIjoxNzE1xkyOTM3fQ.ewpnpCAGp6fa5snw20NvaNJZmU-kXweIadvydOUl_i4c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or user not found."
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/api/v2/user/getuser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user information",
        "description": "Retrieve user information for the authenticated user.",
        "responses": {
          "200": {
            "description": "User information retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found."
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/api/v2/user/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Log out user",
        "description": "Log out the authenticated user by clearing the token.",
        "responses": {
          "200": {
            "description": "User logged out successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Logout Successful"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/api/v2/user/update-user-info": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user information",
        "description": "Update user information such as name, email, and phone number.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user1@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "securepassword"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": 24565643445
                  },
                  "name": {
                    "type": "string",
                    "example": "user1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User information updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or password mismatch."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/api/v2/user/update-avatar": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user avatar",
        "description": "Update user avatar image.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/profile/g8emueu79pg6yz3pyevj.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v2/user/update-user-addresses": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user addresses",
        "description": "Update or add user addresses.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addressType": {
                    "type": "string",
                    "example": "Robert Robertson, 1234 NW Bobcat Lane, St. Robert, MO 65584-5678"
                  },
                  "_id": {
                    "type": "string",
                    "example": "userid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User addresses updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v2/user/delete-user-address/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user address",
        "description": "Delete a user address by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User address ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User address deleted successfully."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v2/user/update-user-password": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user password",
        "description": "Update user password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "example": 123456
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "ABCDE"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "ABCDE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Password updated successfully."
          },
          "400": {
            "description": "Invalid request data or old password incorrect."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v2/user/user-info/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user information by ID",
        "description": "Retrieve user information by user ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User information retrieved successfully."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v2/user/admin-all-users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users (Admin)",
        "description": "Retrieve information about all users. (Admin access only)",
        "responses": {
          "201": {
            "description": "User information retrieved successfully."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v2/user/delete-user/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user by ID (Admin)",
        "description": "Delete a user by ID. (Admin access only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User deleted successfully."
          },
          "400": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v2/product/create-product": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shopId": {
                    "type": "string",
                    "example": "60f02c39fbc34f002472ff9d"
                  },
                  "name": {
                    "type": "string",
                    "example": "Book"
                  },
                  "description": {
                    "type": "string",
                    "example": "Product description with atleast 200 words"
                  },
                  "category": {
                    "type": "string",
                    "example": "Digital Files"
                  },
                  "originalPrice": {
                    "type": "string",
                    "example": 700
                  },
                  "discountPrice": {
                    "type": "string",
                    "example": 200
                  },
                  "stock": {
                    "type": "string",
                    "example": 2
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://example.com/image1.jpg",
                      "https://example.com/image2.jpg"
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "book",
                      "notes",
                      "sell"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/product/get-all-products-shop/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products of a shop",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/product/delete-shop-product/{id}": {
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a product of a shop",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Product Deleted successfully!"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/product/get-all-products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products",
        "responses": {
          "201": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/product/create-new-review": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new review for a product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "example": "Amazing Product. It helped me alot. Thanks Man! üî•"
                  },
                  "orderId": {
                    "example": "66179f2098eb3c07d0020124"
                  },
                  "productId": {
                    "example": "6616e26c98ce7e728402b5ac"
                  },
                  "rating": {
                    "example": 4
                  },
                  "user": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review created successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Reviewed successfully!"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/product/admin-all-products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get all products (Admin)",
        "responses": {
          "201": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/create-shop": {
      "post": {
        "tags": [
          "Shop"
        ],
        "summary": "Create a new shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Example Shop"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "examplePassword123"
                  },
                  "address": {
                    "type": "string",
                    "example": "123 Example Street, City, Country"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Shop created successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Please check your email to activate your shop!"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/activation": {
      "post": {
        "tags": [
          "Shop"
        ],
        "summary": "Activate a shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activation_token": {
                    "type": "string",
                    "example": "your_activation_token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Shop activated successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Shop activated successfully!"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/login-shop": {
      "post": {
        "tags": [
          "Shop"
        ],
        "summary": "Login to a shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "seller@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "securePass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Shop logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/getSeller": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get shop information",
        "responses": {
          "200": {
            "description": "Shop information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/logout": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Logout from a shop",
        "responses": {
          "201": {
            "description": "Shop logged out successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Log out successful!"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/get-shop-info/{id}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get shop information by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Shop information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/update-shop-avatar": {
      "put": {
        "tags": [
          "Shop"
        ],
        "summary": "Update shop profile picture",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "example": "profile.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Shop profile picture updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/update-seller-info": {
      "put": {
        "tags": [
          "Shop"
        ],
        "summary": "Update seller information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Gomit"
                  },
                  "description": {
                    "type": "string",
                    "example": "The Best Choice Books are here"
                  },
                  "address": {
                    "type": "string",
                    "example": "Delhi, New Delhi"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": 578764232
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Seller information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "product": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/admin-all-sellers": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get all sellers (Admin only)",
        "responses": {
          "201": {
            "description": "All sellers retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "sellers": [
                    {
                      "_id": "60f02c39fbc34f002472ff9d",
                      "name": "Example Shop 1",
                      "email": "example1@example.com",
                      "avatar": "https://example.com/avatar1.jpg",
                      "address": "123 Main Street, Cityville",
                      "phoneNumber": "+1234567890",
                      "createdAt": "2021-07-14T12:00:00Z",
                      "updatedAt": "2021-07-15T10:30:00Z"
                    },
                    {
                      "_id": "60f02c39fbc34f002472ff9e",
                      "name": "Example Shop 2",
                      "email": "example2@example.com",
                      "avatar": "https://example.com/avatar2.jpg",
                      "address": "456 Park Avenue, Townsville",
                      "phoneNumber": "+9876543210",
                      "createdAt": "2021-07-15T09:30:00Z",
                      "updatedAt": "2021-07-15T11:45:00Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shop/delete-seller/{id}": {
      "delete": {
        "tags": [
          "Shop"
        ],
        "summary": "Delete a seller (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Seller deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Seller deleted successfully!"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/conversation/create-new-conversation": {
      "post": {
        "tags": [
          "Conversation"
        ],
        "summary": "Create a new conversation",
        "responses": {
          "201": {
            "description": "Conversation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "conversation": {
                      "$ref": "#/components/schemas/Conversation"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/conversation/get-all-conversation-seller/{id}": {
      "get": {
        "tags": [
          "Conversation"
        ],
        "summary": "Get seller conversations",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Seller ID"
          }
        ],
        "responses": {
          "201": {
            "description": "Seller conversations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "conversations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Conversation"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/conversation/get-all-conversation-user/{id}": {
      "get": {
        "tags": [
          "Conversation"
        ],
        "summary": "Get user conversations",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "201": {
            "description": "User conversations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "conversations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Conversation"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/conversation/update-last-message/{id}": {
      "put": {
        "tags": [
          "Conversation"
        ],
        "summary": "Update the last message in a conversation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Conversation ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lastMessage": {
                    "type": "string",
                    "example": "Hello, how are you?"
                  },
                  "lastMessageId": {
                    "type": "string",
                    "example": 123456789
                  }
                },
                "required": [
                  "lastMessage",
                  "lastMessageId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Last message updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "conversation": {
                      "$ref": "#/components/schemas/Conversation"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/message/create-new-message": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Create a new message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "conversationId": {
                    "type": "string",
                    "example": "6470ffad2238b29846bc65bc"
                  },
                  "sender": {
                    "type": "string",
                    "example": "user123"
                  },
                  "text": {
                    "type": "string",
                    "example": "Hello, how are you?"
                  },
                  "images": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://res.cloudinary.com/example/image.jpg"
                  }
                },
                "required": [
                  "conversationId",
                  "sender",
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "$ref": "#/components/schemas/Messages"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/message/get-all-messages/{id}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Get all messages with conversation ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Conversation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Messages"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/order/create-order": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create a new order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cart": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Product"
                    }
                  },
                  "user": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  },
                  "totalPrice": {
                    "type": "number",
                    "example": 250
                  },
                  "paymentInfo": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "Cash on Delivery"
                      },
                      "status": {
                        "type": "string",
                        "example": "Succeeded"
                      }
                    },
                    "required": [
                      "type",
                      "status"
                    ]
                  }
                },
                "required": [
                  "cart",
                  "shippingAddress",
                  "user",
                  "totalPrice",
                  "paymentInfo"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example": true
                          },
                          "order": {
                            "$ref": "#/components/schemas/Order"
                          }
                        },
                        "required": [
                          "success",
                          "order"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "orders"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/order/get-all-orders/{userId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get all orders of a user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example": true
                          },
                          "order": {
                            "$ref": "#/components/schemas/Order"
                          }
                        },
                        "required": [
                          "success",
                          "order"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "orders"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/order/get-seller-all-orders/{shopId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get all orders of a seller",
        "parameters": [
          {
            "in": "path",
            "name": "shopId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Shop ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example": true
                          },
                          "order": {
                            "$ref": "#/components/schemas/Order"
                          }
                        },
                        "required": [
                          "success",
                          "order"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "orders"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/order/update-order-status/{id}": {
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Update order status for a seller",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Order ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "Transferred to delivery partner"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example": true
                          },
                          "order": {
                            "$ref": "#/components/schemas/Order"
                          }
                        },
                        "required": [
                          "success",
                          "order"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "orders"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/order/admin-all-orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get all orders (Admin)",
        "responses": {
          "201": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example": true
                          },
                          "order": {
                            "$ref": "#/components/schemas/Order"
                          }
                        },
                        "required": [
                          "success",
                          "order"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "orders"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Internal Server Error"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "user1"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user1@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "securepassword"
          },
          "phoneNumber": {
            "type": "number",
            "example": 1234567890
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "string",
                  "example": "Country"
                },
                "city": {
                  "type": "string",
                  "example": "City"
                },
                "address1": {
                  "type": "string",
                  "example": "123 Main St"
                },
                "address2": {
                  "type": "string",
                  "example": "Apartment 101"
                },
                "zipCode": {
                  "type": "number",
                  "example": 12345
                },
                "addressType": {
                  "type": "string",
                  "example": "Home"
                }
              }
            }
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-08T12:34:56Z"
          }
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "groupTitle": {
            "type": "string",
            "example": "Group Chat"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string",
              "example": [
                "userId1",
                "userId2"
              ]
            }
          },
          "lastMessage": {
            "type": "string",
            "example": "Last message in the group"
          },
          "lastMessageId": {
            "type": "string",
            "example": "messageId123"
          }
        },
        "required": [
          "members"
        ]
      },
      "Messages": {
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "string",
            "example": "conversationId123"
          },
          "text": {
            "type": "string",
            "example": "Hello, how are you?"
          },
          "sender": {
            "type": "string",
            "example": "userId1"
          },
          "images": {
            "type": "string",
            "example": "https://example.com/image.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-08T12:34:56Z"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Product Name"
          },
          "description": {
            "type": "string",
            "example": "Product Description"
          },
          "category": {
            "type": "string",
            "example": "Electronics"
          },
          "tags": {
            "type": "string",
            "example": "Tag1, Tag2"
          },
          "originalPrice": {
            "type": "number",
            "example": 49.99
          },
          "discountPrice": {
            "type": "number",
            "example": 39.99
          },
          "stock": {
            "type": "number",
            "example": 100
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.com/image1.jpg"
            }
          },
          "reviews": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                },
                "rating": {
                  "type": "number",
                  "example": 4.5
                },
                "comment": {
                  "type": "string",
                  "example": "Great product!"
                },
                "productId": {
                  "type": "string",
                  "example": "productId123"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-08T12:34:56Z"
                }
              }
            }
          },
          "ratings": {
            "type": "number",
            "example": 4.5
          },
          "shopId": {
            "type": "string",
            "example": "shopId123"
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          },
          "sold_out": {
            "type": "number",
            "example": 20
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-08T12:34:56Z"
          }
        }
      },
      "ProductArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Product"
        }
      },
      "Shop": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Shop Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "shop@example.com"
          },
          "password": {
            "type": "string",
            "example": "securepassword"
          },
          "description": {
            "type": "string",
            "example": "Shop Description"
          },
          "address": {
            "type": "string",
            "example": "Shop Address"
          },
          "phoneNumber": {
            "type": "number",
            "example": 1234567890
          },
          "role": {
            "type": "string",
            "example": "Seller"
          },
          "avatar": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-08T12:34:56Z"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "cart": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "646bc677c6a2249b7cdaa789"
                },
                "name": {
                  "type": "string",
                  "example": "Physics Galaxy 2020-21"
                },
                "description": {
                  "type": "string",
                  "example": "Ak jha When it is your time, it‚Äôs your time. There is no point in worrying about what you can‚Äôt control."
                },
                "category": {
                  "type": "string",
                  "example": "Books, Stationery & Art"
                },
                "tags": {
                  "type": "string",
                  "example": "books, stationery"
                },
                "originalPrice": {
                  "type": "number",
                  "example": 500
                },
                "discountPrice": {
                  "type": "number",
                  "example": 200
                },
                "stock": {
                  "type": "number",
                  "example": 2
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/devthakur/image/upload/v1684784756/products/qrzkfvc4rfsrjvprucza.jpg"
                  }
                },
                "shopId": {
                  "type": "string",
                  "example": "646bc602c6a2249b7cdaa77a"
                },
                "shop": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "646bc602c6a2249b7cdaa77a"
                    },
                    "name": {
                      "type": "string",
                      "example": "Edujock"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "1.edujock@gmail.com"
                    },
                    "role": {
                      "type": "string",
                      "example": "Seller"
                    },
                    "avatar": {
                      "type": "string",
                      "example": "https://res.cloudinary.com/devthakur/image/upload/v1684784586/contributor/le2dapzpokgkqfwscpf0.jpg"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-05-22T18:27:54.780Z"
                    }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-05-22T18:27:54.874Z"
                },
                "reviews": {
                  "type": "object"
                },
                "qty": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "totalPrice": {
            "type": "number",
            "example": 2
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "paymentInfo": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "Cash On Delivery"
              },
              "status": {
                "type": "string",
                "example": "Succeeded"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-08T12:34:37.037Z"
          }
        }
      }
    },
    "securitySchemes": {
      "userToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "token"
      },
      "sellerToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "seller_token"
      }
    }
  }
}